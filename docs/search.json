[{"path":"/articles/how_to_use_Bloomers.html","id":"import-functions-and-upload-libraries","dir":"Articles","previous_headings":"","what":"Import functions and upload libraries","title":"Bloomers work flow example","text":"","code":"source('../../R/prepare_example_data.R') source('../../R/calculate_relative_abundance.R') source('../../R/calculate_pseudoabund.R') source('../../R/get_anomalies.R') source(\"../../R/blooming_event_summary.R\") source('../../R/community_evenness.R') source('../../R/compute_bray_curtis_dissimilariy.R')  library(tidyverse) #> ── Attaching packages ─────────────────────────────────────── tidyverse 1.3.2 ── #> ✔ ggplot2 3.3.6      ✔ purrr   0.3.4  #> ✔ tibble  3.1.8      ✔ dplyr   1.0.10 #> ✔ tidyr   1.2.0      ✔ stringr 1.4.1  #> ✔ readr   2.1.2      ✔ forcats 0.5.2  #> ── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ── #> ✖ dplyr::filter() masks stats::filter() #> ✖ dplyr::lag()    masks stats::lag() library(vegan) #> Loading required package: permute #> Loading required package: lattice #> This is vegan 2.6-2 #library(bloomers)"},{"path":"/articles/how_to_use_Bloomers.html","id":"get-example-data","dir":"Articles","previous_headings":"","what":"Get example data","title":"Bloomers work flow example","text":"","code":"setwd('../../') data <- prepare_example_data() #> # A tibble: 6 × 51 #>   day   date     sampl…¹ sampl…² project campain sampl…³ day_m…⁴ date_…⁵ mean_…⁶ #>   <chr> <chr>    <chr>   <chr>   <chr>   <chr>   <chr>   <chr>   <chr>   <chr>   #> 1 8M    8/2/21 … 10:00:… HFW-21… MIAU    HFW     BBMO    morning 8/2/21… 2388.0… #> 2 8T    8/2/21 … 17:00:… HFW-21… MIAU    HFW     BBMO    aftern… 8/2/21… 2095.6… #> 3 9M    9/2/21 … 10:00:… HFW-21… MIAU    HFW     BBMO    morning 9/2/21… 2541.6… #> 4 9T    9/2/21 … 17:00:… HFW-21… MIAU    HFW     BBMO    aftern… 9/2/21… 1876.3… #> 5 10M   10/2/21… 10:00:… HFW-21… MIAU    HFW     BBMO    morning 10/2/2… 2398.4… #> 6 10T   10/2/21… 17:00:… HFW-21… MIAU    HFW     BBMO    aftern… 10/2/2… 1764.7… #> # … with 41 more variables: mean_picoeuk <chr>, mean_nanoeuk <chr>, #> #   mean_syneccho_population1 <lgl>, mean_synecco_population2 <lgl>, #> #   mean_prochloro <chr>, sd_syneccho <chr>, sd_picoeuk <chr>, #> #   sd_nanoeuk <chr>, sd_syneccho_population1 <lgl>, #> #   sd_synecco_population2 <lgl>, sd_prochloro <chr>, mean_HNA <chr>, #> #   mean_perc_HNA <chr>, mean_total_bac <chr>, mean_synec <lgl>, #> #   mean_LNA <chr>, sd_HNA <chr>, sd_total_bac <chr>, sd_synec <lgl>, … #> # A tibble: 6 × 23 #>   asv_num seq_code reads sample_id mesh_…¹ allGe…² date  sampl…³ project campain #>   <chr>   <chr>    <int> <chr>       <int>   <int> <chr> <chr>   <chr>   <chr>   #> 1 asv1    x101        18 HFW-2102…       3     101 9/2/… 10:00:… MIAU    HFW     #> 2 asv1    x103         5 HFW-2102…       3     103 9/2/… 17:00:… MIAU    HFW     #> 3 asv1    x105        20 HFW-2102…       3     105 10/2… 10:00:… MIAU    HFW     #> 4 asv1    x107        26 HFW-2102…       3     107 10/2… 17:00:… MIAU    HFW     #> 5 asv1    x109         7 HFW-2102…       3     109 11/2… 10:00:… MIAU    HFW     #> 6 asv1    x111        15 HFW-2102…       3     111 11/2… 17:00:… MIAU    HFW     #> # … with 13 more variables: sampling_site <chr>, day_moment <chr>, day <chr>, #> #   season <chr>, date_hour <chr>, sample <chr>, kingdom <chr>, phylum <chr>, #> #   class <chr>, order <chr>, family <chr>, genus <chr>, species <chr>, and #> #   abbreviated variable names ¹​mesh_size, ²​allGenetics_ID, ³​sampling_hour #> # A tibble: 6 × 10 #>   date    samplin…¹ sampl…² project campain sampl…³ day_m…⁴ day   season date_…⁵ #>   <chr>   <chr>     <chr>   <chr>   <chr>   <chr>   <chr>   <chr> <chr>  <chr>   #> 1 8/2/21  10:00:00  HFW-21… MIAU    HFW     BBMO    morning 08M   Winter 8/2/21… #> 2 8/2/21  17:00:00  HFW-21… MIAU    HFW     BBMO    aftern… 08T   Winter 8/2/21… #> 3 9/2/21  10:00:00  HFW-21… MIAU    HFW     BBMO    morning 09M   Winter 9/2/21… #> 4 9/2/21  17:00:00  HFW-21… MIAU    HFW     BBMO    aftern… 09T   Winter 9/2/21… #> 5 10/2/21 10:00:00  HFW-21… MIAU    HFW     BBMO    morning 10M   Winter 10/2/2… #> 6 10/2/21 17:00:00  HFW-21… MIAU    HFW     BBMO    aftern… 10T   Winter 10/2/2… #> # … with abbreviated variable names ¹​sampling_hour, ²​sample_id, ³​sampling_site, #> #   ⁴​day_moment, ⁵​date_hour head(data) #> $abund_data #> # A tibble: 16 × 51 #>    day   date    sampl…¹ sampl…² project campain sampl…³ day_m…⁴ date_…⁵ mean_…⁶ #>    <chr> <chr>   <chr>   <chr>   <chr>   <chr>   <chr>   <chr>   <chr>   <chr>   #>  1 8M    8/2/21… 10:00:… HFW-21… MIAU    HFW     BBMO    morning 8/2/21… 2388.0… #>  2 8T    8/2/21… 17:00:… HFW-21… MIAU    HFW     BBMO    aftern… 8/2/21… 2095.6… #>  3 9M    9/2/21… 10:00:… HFW-21… MIAU    HFW     BBMO    morning 9/2/21… 2541.6… #>  4 9T    9/2/21… 17:00:… HFW-21… MIAU    HFW     BBMO    aftern… 9/2/21… 1876.3… #>  5 10M   10/2/2… 10:00:… HFW-21… MIAU    HFW     BBMO    morning 10/2/2… 2398.4… #>  6 10T   10/2/2… 17:00:… HFW-21… MIAU    HFW     BBMO    aftern… 10/2/2… 1764.7… #>  7 11M   11/2/2… 10:00:… HFW-21… MIAU    HFW     BBMO    morning 11/2/2… 2317.5… #>  8 11T   11/2/2… 17:00:… HFW-21… MIAU    HFW     BBMO    aftern… 11/2/2… 2419.1… #>  9 12M   12/2/2… 10:00:… HFW-21… MIAU    HFW     BBMO    morning 12/2/2… 3159.1… #> 10 12T   12/2/2… 17:00:… HFW-21… MIAU    HFW     BBMO    aftern… 12/2/2… 2642.1… #> 11 13M   13/2/2… 10:00:… HFW-21… MIAU    HFW     BBMO    morning 13/2/2… 3381.4… #> 12 13T   13/2/2… 17:00:… HFW-21… MIAU    HFW     BBMO    aftern… 13/2/2… 3042.0… #> 13 14M   14/2/2… 10:00:… HFW-21… MIAU    HFW     BBMO    morning 14/2/2… 2852.6… #> 14 15M   15/2/2… 10:00:… HFW-21… MIAU    HFW     BBMO    morning 15/2/2… 2848.0… #> 15 15T   15/2/2… 17:00:… HFW-21… MIAU    HFW     BBMO    aftern… 15/2/2… 2573.9… #> 16 16M   16/2/2… 10:00:… HFW-21… MIAU    HFW     BBMO    morning 16/2/2… 2895.4… #> # … with 41 more variables: mean_picoeuk <chr>, mean_nanoeuk <chr>, #> #   mean_syneccho_population1 <lgl>, mean_synecco_population2 <lgl>, #> #   mean_prochloro <chr>, sd_syneccho <chr>, sd_picoeuk <chr>, #> #   sd_nanoeuk <chr>, sd_syneccho_population1 <lgl>, #> #   sd_synecco_population2 <lgl>, sd_prochloro <chr>, mean_HNA <chr>, #> #   mean_perc_HNA <chr>, mean_total_bac <chr>, mean_synec <lgl>, #> #   mean_LNA <chr>, sd_HNA <chr>, sd_total_bac <chr>, sd_synec <lgl>, … #>  #> $asv_tab_l #> # A tibble: 160 × 23 #>    asv_num seq_code reads sample…¹ mesh_…² allGe…³ date  sampl…⁴ project campain #>    <chr>   <chr>    <int> <chr>      <int>   <int> <chr> <chr>   <chr>   <chr>   #>  1 asv1    x101        18 HFW-210…       3     101 9/2/… 10:00:… MIAU    HFW     #>  2 asv1    x103         5 HFW-210…       3     103 9/2/… 17:00:… MIAU    HFW     #>  3 asv1    x105        20 HFW-210…       3     105 10/2… 10:00:… MIAU    HFW     #>  4 asv1    x107        26 HFW-210…       3     107 10/2… 17:00:… MIAU    HFW     #>  5 asv1    x109         7 HFW-210…       3     109 11/2… 10:00:… MIAU    HFW     #>  6 asv1    x111        15 HFW-210…       3     111 11/2… 17:00:… MIAU    HFW     #>  7 asv1    x113        16 HFW-210…       3     113 12/2… 10:00:… MIAU    HFW     #>  8 asv1    x115        29 HFW-210…       3     115 12/2… 17:00:… MIAU    HFW     #>  9 asv1    x117         3 HFW-210…       3     117 13/2… 10:00:… MIAU    HFW     #> 10 asv1    x119        17 HFW-210…       3     119 13/2… 17:00:… MIAU    HFW     #> # … with 150 more rows, 13 more variables: sampling_site <chr>, #> #   day_moment <chr>, day <chr>, season <chr>, date_hour <chr>, sample <chr>, #> #   kingdom <chr>, phylum <chr>, class <chr>, order <chr>, family <chr>, #> #   genus <chr>, species <chr>, and abbreviated variable names ¹​sample_id, #> #   ²​mesh_size, ³​allGenetics_ID, ⁴​sampling_hour #>  #> $metadata #> # A tibble: 16 × 10 #>    date    sampli…¹ sampl…² project campain sampl…³ day_m…⁴ day   season date_…⁵ #>    <chr>   <chr>    <chr>   <chr>   <chr>   <chr>   <chr>   <chr> <chr>  <chr>   #>  1 8/2/21  10:00:00 HFW-21… MIAU    HFW     BBMO    morning 08M   Winter 8/2/21… #>  2 8/2/21  17:00:00 HFW-21… MIAU    HFW     BBMO    aftern… 08T   Winter 8/2/21… #>  3 9/2/21  10:00:00 HFW-21… MIAU    HFW     BBMO    morning 09M   Winter 9/2/21… #>  4 9/2/21  17:00:00 HFW-21… MIAU    HFW     BBMO    aftern… 09T   Winter 9/2/21… #>  5 10/2/21 10:00:00 HFW-21… MIAU    HFW     BBMO    morning 10M   Winter 10/2/2… #>  6 10/2/21 17:00:00 HFW-21… MIAU    HFW     BBMO    aftern… 10T   Winter 10/2/2… #>  7 11/2/21 10:00:00 HFW-21… MIAU    HFW     BBMO    morning 11M   Winter 11/2/2… #>  8 11/2/21 17:00:00 HFW-21… MIAU    HFW     BBMO    aftern… 11T   Winter 11/2/2… #>  9 12/2/21 10:00:00 HFW-21… MIAU    HFW     BBMO    morning 12M   Winter 12/2/2… #> 10 12/2/21 17:00:00 HFW-21… MIAU    HFW     BBMO    aftern… 12T   Winter 12/2/2… #> 11 13/2/21 10:00:00 HFW-21… MIAU    HFW     BBMO    morning 13M   Winter 13/2/2… #> 12 13/2/21 17:00:00 HFW-21… MIAU    HFW     BBMO    aftern… 13T   Winter 13/2/2… #> 13 14/2/21 10:00:00 HFW-21… MIAU    HFW     BBMO    morning 14M   Winter 14/2/2… #> 14 15/2/21 10:00:00 HFW-21… MIAU    HFW     BBMO    morning 15M   Winter 15/2/2… #> 15 15/2/21 17:00:00 HFW-21… MIAU    HFW     BBMO    aftern… 15T   Winter 15/2/2… #> 16 16/2/21 10:00:00 HFW-21… MIAU    HFW     BBMO    morning 16M   Winter 16/2/2… #> # … with abbreviated variable names ¹​sampling_hour, ²​sample_id, ³​sampling_site, #> #   ⁴​day_moment, ⁵​date_hour"},{"path":[]},{"path":"/articles/how_to_use_Bloomers.html","id":"calculate-relative-abundances","dir":"Articles","previous_headings":"Preprocessing data","what":"Calculate relative abundances","title":"Bloomers work flow example","text":"","code":"asv_tab_l_rel_abund <- data$asv_tab_l %>%   calculate_rel_abund(group_cols = sample_id) head(asv_tab_l_rel_abund) #> # A tibble: 6 × 25 #> # Groups:   sample_id [6] #>   asv_num seq_code reads sample_id mesh_…¹ allGe…² date  sampl…³ project campain #>   <chr>   <chr>    <int> <chr>       <int>   <int> <chr> <chr>   <chr>   <chr>   #> 1 asv1    x101        18 HFW-2102…       3     101 9/2/… 10:00:… MIAU    HFW     #> 2 asv1    x103         5 HFW-2102…       3     103 9/2/… 17:00:… MIAU    HFW     #> 3 asv1    x105        20 HFW-2102…       3     105 10/2… 10:00:… MIAU    HFW     #> 4 asv1    x107        26 HFW-2102…       3     107 10/2… 17:00:… MIAU    HFW     #> 5 asv1    x109         7 HFW-2102…       3     109 11/2… 10:00:… MIAU    HFW     #> 6 asv1    x111        15 HFW-2102…       3     111 11/2… 17:00:… MIAU    HFW     #> # … with 15 more variables: sampling_site <chr>, day_moment <chr>, day <chr>, #> #   season <chr>, date_hour <chr>, sample <chr>, kingdom <chr>, phylum <chr>, #> #   class <chr>, order <chr>, family <chr>, genus <chr>, species <chr>, #> #   total_reads <int>, relative_abundance <dbl>, and abbreviated variable names #> #   ¹​mesh_size, ²​allGenetics_ID, ³​sampling_hour"},{"path":"/articles/how_to_use_Bloomers.html","id":"calculate-pseudoabundandances","dir":"Articles","previous_headings":"Preprocessing data","what":"Calculate pseudoabundandances","title":"Bloomers work flow example","text":"Pseudoabundances relative abundances multiplied total abundance data sample.","code":"asv_tab_pseudoabund <- asv_tab_l_rel_abund %>%   calculate_pseudoabund(abund_data = data$abund_data,  by_ =  c('sample_id', 'sampling_site'),                         rel_abund = as.numeric(relative_abundance),                         total_abund = as.numeric(mean_total_bac)) #> [1] 45570.21 14087.23 11035.45 18527.70 18040.62 24705.02 head(asv_tab_pseudoabund) #> # A tibble: 6 × 75 #>   asv_num seq_code reads sample…¹ mesh_…² allGe…³ date.x sampl…⁴ proje…⁵ campa…⁶ #>   <chr>   <chr>    <int> <chr>      <int>   <int> <chr>  <chr>   <chr>   <chr>   #> 1 asv1    x101        18 HFW-210…       3     101 9/2/21 10:00:… MIAU    HFW     #> 2 asv1    x103         5 HFW-210…       3     103 9/2/21 17:00:… MIAU    HFW     #> 3 asv1    x105        20 HFW-210…       3     105 10/2/… 10:00:… MIAU    HFW     #> 4 asv1    x107        26 HFW-210…       3     107 10/2/… 17:00:… MIAU    HFW     #> 5 asv1    x109         7 HFW-210…       3     109 11/2/… 10:00:… MIAU    HFW     #> 6 asv1    x111        15 HFW-210…       3     111 11/2/… 17:00:… MIAU    HFW     #> # … with 65 more variables: sampling_site <chr>, day_moment.x <chr>, #> #   day.x <chr>, season.x <chr>, date_hour.x <chr>, sample <chr>, #> #   kingdom <chr>, phylum <chr>, class <chr>, order <chr>, family <chr>, #> #   genus <chr>, species <chr>, total_reads <int>, relative_abundance <dbl>, #> #   day.y <chr>, date.y <chr>, sampling_hour.y <chr>, project.y <chr>, #> #   campain.y <chr>, day_moment.y <chr>, date_hour.y <chr>, #> #   mean_syneccho <chr>, mean_picoeuk <chr>, mean_nanoeuk <chr>, …"},{"path":"/articles/how_to_use_Bloomers.html","id":"calculate-diversity-parammeters","dir":"Articles","previous_headings":"","what":"Calculate diversity parammeters","title":"Bloomers work flow example","text":"calculate different diversity parameters check blooming events detected effect community structure ## Community eveness","code":"community_eveness <- asv_tab_pseudoabund %>%   as_tibble() %>%   group_by(sample_id) %>%   dplyr::summarise(community_eveness_result = community_evenness(abundances = pseudoabundance, index = \"Shannon\")) head(community_eveness) #> # A tibble: 6 × 2 #>   sample_id   community_eveness_result #>   <chr>                          <dbl> #> 1 HFW-210208M                    0.825 #> 2 HFW-210208T                    0.715 #> 3 HFW-210209M                    0.816 #> 4 HFW-210209T                    0.865 #> 5 HFW-210210M                    0.803 #> 6 HFW-210210T                    0.880"},{"path":"/articles/how_to_use_Bloomers.html","id":"community-bray-curtis-dissimilarity","dir":"Articles","previous_headings":"Calculate diversity parammeters","what":"Community Bray-Curtis dissimilarity","title":"Bloomers work flow example","text":"","code":"bray_curtis_results <- dissimilarity_matrix(data = asv_tab_l_rel_abund, sample_id_col = sample_id) #> Warning: `as_data_frame()` was deprecated in tibble 2.0.0. #> ℹ Please use `as_tibble()` instead. #> ℹ The signature and semantics have changed, see `?as_tibble`. head(bray_curtis_results) #> # A tibble: 6 × 3 #>   samples     row_index_2 bray_curtis_result #>   <chr>             <int>              <dbl> #> 1 NA                   NA             NA     #> 2 HFW-210208T           2              0.290 #> 3 HFW-210209M           3              0.232 #> 4 HFW-210209T           4              0.356 #> 5 HFW-210210M           5              0.303 #> 6 HFW-210210T           6              0.317"},{"path":[]},{"path":"/articles/how_to_use_Bloomers.html","id":"for-relative-abundances-and-pseudoabundances","dir":"Articles","previous_headings":"Discover anomalies","what":"For relative abundances and pseudoabundances","title":"Bloomers work flow example","text":"","code":"z <- asv_tab_pseudoabund %>%   as_tibble() %>%   group_by(asv_num) %>%   dplyr::summarize(anomalies_ab = get_anomalies(values = pseudoabundance, plotting = TRUE)[[1]],                    anomalies_ra = get_anomalies(values = relative_abundance, plotting = TRUE)[[1]]) z #TODO AÑADIR EVENESS Y BC #> # A tibble: 10 × 3 #>    asv_num anomalies_ab anomalies_ra #>    <chr>   <lgl>        <lgl>        #>  1 asv1    TRUE         TRUE         #>  2 asv10   TRUE         TRUE         #>  3 asv2    TRUE         TRUE         #>  4 asv3    TRUE         FALSE        #>  5 asv4    TRUE         TRUE         #>  6 asv5    TRUE         TRUE         #>  7 asv6    TRUE         TRUE         #>  8 asv7    TRUE         TRUE         #>  9 asv8    TRUE         TRUE         #> 10 asv9    TRUE         TRUE"},{"path":"/articles/how_to_use_Bloomers.html","id":"for-community-eveness-and-bray-curtis-dissimilarity","dir":"Articles","previous_headings":"Discover anomalies","what":"For community eveness and bray curtis dissimilarity","title":"Bloomers work flow example","text":"","code":"bray_curtis_results %>%   cbind(community_eveness) %>%   #group_by(sample_id) %>%   dplyr::summarize(anomalies_ab = get_anomalies(values = bray_curtis_result, plotting = TRUE)[[1]],                    anomalies_ra = get_anomalies(values = community_eveness_result, plotting = TRUE)[[1]]) #>   anomalies_ab anomalies_ra #> 1         TRUE        FALSE"},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Ona Deulofeu-Capo. Author, maintainer. Irene Mendoza. Author. Ignasi Bartomeus. Author.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Deulofeu-Capo O. 2023. Bloomers. https://ecologyr.github.io/Bloomers/","code":"@Manual{,   title = {Bloomers},   author = {Ona Deulofeu-Capo and Irene Mendoza and Ignasi Bartomeus},   year = {2023},   url = {https://ecologyr.github.io/Bloomers/}, }"},{"path":"/index.html","id":"bloomers","dir":"","previous_headings":"","what":"Identify Potential Bloomers In Microbial Communities","title":"Identify Potential Bloomers In Microbial Communities","text":"main objective “Bloomers” package detect sharp changes abundances individual taxa microbial communities. bloomer defined taxa fast significant increase community compared rest species. Examples given bacteria found Mediterranean season.","code":""},{"path":"/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Identify Potential Bloomers In Microbial Communities","text":"code create package available .","code":"# install.packages(\"devtools\") devtools::install_github(\"EcologyR/Bloomers\")"},{"path":[]},{"path":"/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"Identify Potential Bloomers In Microbial Communities","text":"basic example shows solve common problem: special using README.Rmd instead just README.md? can include R chunks like : ’ll still need render README.Rmd regularly, keep README.md --date. devtools::build_readme() handy . also use GitHub Actions re-render README.Rmd every time push. example workflow can found : https://github.com/r-lib/actions/tree/v1/examples. Put plot representing blooming species detect anomalies case, don’t forget commit push resulting figure files, display GitHub CRAN.","code":"# library(Bloomers) ## basic example code summary(cars) #>      speed           dist        #>  Min.   : 4.0   Min.   :  2.00   #>  1st Qu.:12.0   1st Qu.: 26.00   #>  Median :15.0   Median : 36.00   #>  Mean   :15.4   Mean   : 42.98   #>  3rd Qu.:19.0   3rd Qu.: 56.00   #>  Max.   :25.0   Max.   :120.00 #load(\"./data/bloomersdata.rda\")  #plot(bloomersdata$pseudoabundance) #improve this example"},{"path":"/index.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Identify Potential Bloomers In Microbial Communities","text":"using package, please cite :","code":"#citation(\"Bloomers\")"},{"path":"/index.html","id":"funding","dir":"","previous_headings":"","what":"Funding","title":"Identify Potential Bloomers In Microbial Communities","text":"Put funding Institut de Ciencies del Mar","code":""},{"path":"/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2023 templateRpackage authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"/reference/Bloomers-package.html","id":null,"dir":"Reference","previous_headings":"","what":"Bloomers: Identify Potential Bloomers In Microbial Communities — Bloomers-package","title":"Bloomers: Identify Potential Bloomers In Microbial Communities — Bloomers-package","text":"package created identify bloomers microbial communities datasets temporal spatial scales. Bloomers microorganisms dominate community localized environment short period time.","code":""},{"path":[]},{"path":"/reference/Bloomers-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Bloomers: Identify Potential Bloomers In Microbial Communities — Bloomers-package","text":"Maintainer: Ona Deulofeu-Capo ona.deulofeu@gmail.com (ORCID) Authors: Irene Mendoza (ORCID) Ignasi Bartomeus (ORCID)","code":""},{"path":"/reference/blooming_summary.html","id":null,"dir":"Reference","previous_headings":"","what":"Blooming event summary — blooming_summary","title":"Blooming event summary — blooming_summary","text":"function calculate long anomalies persist time series.","code":""},{"path":"/reference/blooming_summary.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Blooming event summary — blooming_summary","text":"","code":"blooming_summary(   values,   z_vector,   cutoff = 1.96,   anomaly_point = NULL,   range_percentage = 10 )"},{"path":"/reference/blooming_summary.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Blooming event summary — blooming_summary","text":"values time series values. vector. z_vector vector anomalies (z-values) generated get_anomalies() cutoff Z-value threshold detect anomaly. default 1.96, percentile 95% anomaly_point Instead z_vector, one can can add directly sampling point number(s) detected anomaly manually. range_percentage percentage change around values admit blooming event mantained","code":""},{"path":"/reference/blooming_summary.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Blooming event summary — blooming_summary","text":"data frame entri anomaly point. now show time point detected, value, many posterior data_points within range_percentage (compatible_values) bloom_duration.","code":""},{"path":"/reference/blooming_summary.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Blooming event summary — blooming_summary","text":"O. Deulofeu, . Bartomeus","code":""},{"path":"/reference/blooming_summary.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Blooming event summary — blooming_summary","text":"","code":"if (FALSE) { abundance <- runif(16, 0, 2000) abundance[10] <- 20000 z_vector <- get_anomalies(values = abundance)[[2]] blooming_summary(values = abundance, z_vector = z_vector) blooming_summary(values  = abundance, anomaly_point = 10) }"},{"path":"/reference/calculate_pseudoabund.html","id":null,"dir":"Reference","previous_headings":"","what":"Pseudoabundances calculation — calculate_pseudoabund","title":"Pseudoabundances calculation — calculate_pseudoabund","text":"Pseudoabundances calculation","code":""},{"path":"/reference/calculate_pseudoabund.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pseudoabundances calculation — calculate_pseudoabund","text":"","code":"calculate_pseudoabund(data, abund_data, by_ = NULL, rel_abund, total_abund)"},{"path":"/reference/calculate_pseudoabund.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pseudoabundances calculation — calculate_pseudoabund","text":"data tidy tibble long relative abundance total abundance per sample columns abund_data tibble total abundance data rel_abund abundance column relative abundances (0-1) taxa data tibble total_abund column total abundance data abund_data tibble","code":""},{"path":"/reference/calculate_pseudoabund.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Pseudoabundances calculation — calculate_pseudoabund","text":"O. Deulofeu","code":""},{"path":"/reference/calculate_pseudoabund.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Pseudoabundances calculation — calculate_pseudoabund","text":"","code":"taxa <- c(\"taxa1\", \"taxa2\", \"taxa3\", \"taxa4\") rel.abundances<-  c(runif(16, 0, 2000), runif(16, 0, 2000), runif(16, 0, 2000), runif(16, 0, 2000)) data <- data.frame(taxa = rep(taxa, 16), rel.abundances, event = sort(rep(1:16,4))) abund_data <- data.frame(event = 1:16, tot.abund = runif(16, 2000, 5000)) calculate_pseudoabund(data, abund_data, rel_abund = rel.abundances, total_abund = tot.abund) #> Joining, by = \"event\" #> [1] 4310379 2640556 3540828 3312271 1866074  505320 #> # A tibble: 64 × 5 #>    taxa  rel.abundances event tot.abund pseudoabundance #>    <chr>          <dbl> <int>     <dbl>           <dbl> #>  1 taxa1          1748.     1     2465.        4310379. #>  2 taxa2          1071.     1     2465.        2640556. #>  3 taxa3          1436.     1     2465.        3540828. #>  4 taxa4          1344.     1     2465.        3312271. #>  5 taxa1           623.     2     2994.        1866074. #>  6 taxa2           169.     2     2994.         505320. #>  7 taxa3           272.     2     2994.         814416. #>  8 taxa4          1345.     2     2994.        4025666. #>  9 taxa1           827.     3     4047.        3344783. #> 10 taxa2           387.     3     4047.        1566128. #> # … with 54 more rows"},{"path":"/reference/calculate_rel_abund.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate relative abundances from a data with reads from each taxa. — calculate_rel_abund","title":"Calculate relative abundances from a data with reads from each taxa. — calculate_rel_abund","text":"Calculate relative abundances data reads taxa.","code":""},{"path":"/reference/calculate_rel_abund.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate relative abundances from a data with reads from each taxa. — calculate_rel_abund","text":"","code":"calculate_rel_abund(data, group_cols)"},{"path":"/reference/calculate_rel_abund.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate relative abundances from a data with reads from each taxa. — calculate_rel_abund","text":"data long tibble reads column groups columns group identify exclusively sample","code":""},{"path":"/reference/community_evenness.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate community evenness index — community_evenness","title":"Calculate community evenness index — community_evenness","text":"Calculates evenness index community given abundance data diversity index. possible choose among three different indices (Shannon, Simpson Pielou)","code":""},{"path":"/reference/community_evenness.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate community evenness index — community_evenness","text":"","code":"community_evenness(abundances, index = \"Shannon\")"},{"path":"/reference/community_evenness.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate community evenness index — community_evenness","text":"abundances vector matrix species abundances index string indicating diversity index used. Options \"Shannon\", \"Simpson\" \"Pielou\".","code":""},{"path":"/reference/community_evenness.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate community evenness index — community_evenness","text":"numeric value representing community evenness index","code":""},{"path":"/reference/community_evenness.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Calculate community evenness index — community_evenness","text":". Mendoza","code":""},{"path":"/reference/community_evenness.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate community evenness index — community_evenness","text":"","code":"#community_evenness(c(10, 20, 30), \"Shannon\") #community_evenness(matrix(c(10, 20, 30, 5, 15, 25), ncol = 2), \"Simpson\")  #abundances <- c(60,54,87,5) #community_evenness(abundances, index = \"Shannon\") #it goes from 0 to 1 #community_evenness(abundances, index = \"Simpson\") #it goes from 0 to number of species #community_evenness(abundances, index = \"Pielou\")"},{"path":"/reference/dissimilarity_matrix.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute Bray-Curtis dissimilarity for adjacent samples — dissimilarity_matrix","title":"Compute Bray-Curtis dissimilarity for adjacent samples — dissimilarity_matrix","text":"Compute Bray-Curtis dissimilarity adjacent samples","code":""},{"path":"/reference/dissimilarity_matrix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute Bray-Curtis dissimilarity for adjacent samples — dissimilarity_matrix","text":"","code":"dissimilarity_matrix(data, sample_id_col)"},{"path":"/reference/dissimilarity_matrix.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute Bray-Curtis dissimilarity for adjacent samples — dissimilarity_matrix","text":"data tibble relative abundances ASV long format sample_id_col column identifies uniquely sample consecutively","code":""},{"path":"/reference/dissimilarity_matrix.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute Bray-Curtis dissimilarity for adjacent samples — dissimilarity_matrix","text":"","code":"#dissimilarity_matrix(data = asv_tab_l_rel_abund, sample_id_col = sample_id)"},{"path":"/reference/get_anomalies.html","id":null,"dir":"Reference","previous_headings":"","what":"get_anomalies — get_anomalies","title":"get_anomalies — get_anomalies","text":"function calculate anomalies time series calculating z-values data point respect specified previous moving window.","code":""},{"path":"/reference/get_anomalies.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"get_anomalies — get_anomalies","text":"","code":"get_anomalies(   values = NULL,   time_lag = 4,   cutoff = 1.96,   negative = FALSE,   plotting = TRUE,   na_rm = FALSE,   texts = \"taxa\" )"},{"path":"/reference/get_anomalies.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"get_anomalies — get_anomalies","text":"time_lag single value (number) specifying many previous data points want consider calculate anomalies. Default 4 cutoff Z-value threshold detect anomaly. default 1.96, percentile 95% negative want detect positive anomaliess also negative. Default FALSE plotting plot time series? Default TRUE na_rm NA values allowed values? Default FALSE. texts user specifies text add plot e.g. taxa. value vector abundances, relative abundances parameter per sampling period (numeric)","code":""},{"path":"/reference/get_anomalies.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"get_anomalies — get_anomalies","text":"list two elements, \"anomaly\" (TRUE / FALSE) \"z\" (vector z-scores, one per time_point. Note first time points NA, previous records calculate moving window)","code":""},{"path":"/reference/get_anomalies.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"get_anomalies — get_anomalies","text":". Bartomeus","code":""},{"path":"/reference/get_anomalies.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"get_anomalies — get_anomalies","text":"","code":"#abundance <- runif(16, 0, 2000) #abundance[10] <- 20000 #get_anomalies(values = abundance)"},{"path":"/reference/get_anomalies_season.html","id":null,"dir":"Reference","previous_headings":"","what":"get_anomalies_season — get_anomalies_season","title":"get_anomalies_season — get_anomalies_season","text":"function calculate anomalies across seasons time series calculating z-values respect past seasons.","code":""},{"path":"/reference/get_anomalies_season.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"get_anomalies_season — get_anomalies_season","text":"","code":"get_anomalies_season(   abundance = NULL,   season = NULL,   compare_season = \"all\",   plotting = TRUE )"},{"path":"/reference/get_anomalies_season.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"get_anomalies_season — get_anomalies_season","text":"abundance vector abundance per sampling period (numeric) season vector (season) sample collected compare_season season compare, default \"\" plotting plot time series? Default TRUE","code":""},{"path":"/reference/get_anomalies_season.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"get_anomalies_season — get_anomalies_season","text":". Bartomeus","code":""},{"path":"/reference/get_anomalies_season.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"get_anomalies_season — get_anomalies_season","text":"","code":"abundance <- runif(16, 0, 2000) abundance[10] <- 20000 season <- rep(c(\"march\", \"april\", \"may\", \"june\"), 4) get_anomalies_season(abundance, season)  #>  [1]  0.02782339 -0.48828767 -0.85816687  1.15268199 -0.97710026 -0.53213681 #>  [7] -0.83277514 -1.23715359  1.36736954  1.49959905  1.11041701 -0.21968740 #> [13] -0.41809267 -0.47917457  0.58052499  0.30415900"},{"path":"/reference/prepare_example_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Get example dataset — prepare_example_data","title":"Get example dataset — prepare_example_data","text":"Get example dataset","code":""},{"path":"/reference/prepare_example_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get example dataset — prepare_example_data","text":"","code":"prepare_example_data(   abund_data = \"./data-raw/example_abund_data.txt\",   asv_tab_l = \"./data-raw/example_asv_tab_long.txt\",   metadata = \"./data-raw/example_metadata.txt\" )"},{"path":"/reference/prepare_example_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get example dataset — prepare_example_data","text":"abund_data txt dataset total abundance data sample_id codes. asv_tab_l txt dataset data ASV_tab long format reads per ASV sample metadata txt dataset metadata needed dataset","code":""}]
